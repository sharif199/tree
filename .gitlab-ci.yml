variables:
  AWS_BUILD_SUBDIR: provider/storage-aws/build-aws
  AWS_TEST_SUBDIR: testing/storage-test-aws
  AWS_SERVICE: storage
  AWS_ENVIRONMENT: dev
  AWS_DEPLOY_TARGET: EKS
  AWS_EKS_DEPLOYMENT_NAME: os-storage

  AWS_MONGODB_BUILD_SUBDIR: provider/storage-aws-mongodb/build-aws
  AWS_MONGODB_TEST_SUBDIR: testing/storage-test-aws-mongodb
  AWS_MONGODB_SERVICE: storage
  AWS_MONGODB_ENVIRONMENT: dev
  AWS_MONGODB_SKIP_TESTS: 'true'

  GCP_BUILD_SUBDIR: provider/storage-gcp
  GCP_INT_TEST_SUBDIR: testing/storage-test-gcp
  GCP_APPLICATION_NAME: os-storage
  GCP_ENVIRONMENT: testing
  GCP_PROJECT: opendes-evt
  GCP_TENANT_NAME: opendesevt
  GCP_DEPLOY_ENV: p4d

  OSDU_GCP_ENVIRONMENT: osdu-gcp
  # --- osdu gcp specific variables for cloudrun ---
  OSDU_GCP_SERVICE: storage
  OSDU_GCP_VENDOR: gcp
  OSDU_GCP_APPLICATION_NAME: os-storage
  OSDU_GCP_DEFAULT_DATA_COUNTRY: US
  # --- osdu specific variables for cloudrun storage w/o "/" at the end ---
  OSDU_GCP_ENV_VARS: GOOGLE_AUDIENCES=$GOOGLE_AUDIENCE,AUTHORIZE_API=$OSDU_GCP_ENTITLEMENTS_V2_URL,LEGALTAG_API=$OSDU_GCP_LEGALTAG_API,STORAGE_HOSTNAME=$OSDU_GCP_STORAGE_HOSTNAME,CRS_API=$OSDU_GCP_CRS_API,DEFAULT_DATA_COUNTRY=$OSDU_GCP_DEFAULT_DATA_COUNTRY,REDIS_STORAGE_HOST=$REDIS_STORAGE_HOST,REDIS_GROUP_HOST=$REDIS_GROUP_HOST,PARTITION_API=$OSDU_GCP_PARTITION_API,POLICY_API=$OSDU_GCP_POLICY_API,POLICY_ID=storage --vpc-connector=$OSDU_GCP_VPC_CONNECTOR
  OSDU_GCP_TEST_SUBDIR: testing/$OSDU_GCP_SERVICE-test-$OSDU_GCP_VENDOR
  OSDU_GCP_HELM_PACKAGE_CHARTS: "devops/gcp/deploy devops/gcp/configmap"
  # --- osdu specific variables for GKE ---
  OSDU_GCP_HELM_CONFIG_SERVICE_VARS: "--set data.google_audiences=$GOOGLE_AUDIENCE --set data.redis_group_host=$REDIS_GROUP_HOST --set data.redis_storage_host=$REDIS_STORAGE_HOST --set data.storage_hostname=$OSDU_GCP_SERVICE"
  OSDU_GCP_HELM_DEPLOYMENT_SERVICE_VARS: "--set data.image=$CI_REGISTRY_IMAGE/osdu-gcp:$CI_COMMIT_SHORT_SHA --set data.serviceAccountName=workload-identity-storage --set data.limits_cpu=1.5 --set data.limits_memory=2048M"
  OSDU_GCP_HELM_CONFIG_SERVICE: storage-config
  OSDU_GCP_HELM_DEPLOYMENT_SERVICE: storage-deploy

  AZURE_SERVICE: storage
  AZURE_BUILD_SUBDIR: provider/storage-azure
  AZURE_TEST_SUBDIR: testing/storage-test-azure

  IBM_BUILD_SUBDIR: provider/storage-ibm
  IBM_INT_TEST_SUBDIR: testing/storage-test-ibm
  IBM_TENANT_NAME: tenant1

include:
  - project: "osdu/platform/ci-cd-pipelines"
    file: "standard-setup.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "build/maven.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/aws-global.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/aws-maven.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/ibm.yml"

  - project: 'osdu/platform/ci-cd-pipelines'
    file: "cloud-providers/osdu-gcp-gke.yml"

  - project: 'osdu/platform/ci-cd-pipelines'
    file: 'publishing/pages.yml'

  - project: "osdu/platform/ci-cd-pipelines"
    file: "scanners/gitlab-ultimate.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/azure.yml"

  - project: 'osdu/platform/ci-cd-pipelines'
    file: 'cloud-providers/aws-mongodb.yml'

# disable the eslint scanner
# I think this is being generated from the presence of an HTML file, but there
# is no javascript to scan, so the job isn't helpful and just gets in the way
eslint-sast:
  rules:
    - when: never

# --------------------------------------------------------------------------------
# Experimental FOSSA jobs. These will be promoted to the standard ci-cd-pipelines after
# they've had some testing in a real project

fossa-analyze:
  extends: .maven
  image: $CI_REGISTRY/divido/fossa-with-cache/incremental:latest
  cache:
    paths:
      - $MAVEN_REPO_PATH
    policy: pull

  stage: scan
  needs: ['compile-and-unit-test']
  rules:
    - if: $FOSSA_API_KEY

  variables:
    FOSSA_OUTPUT_DIR: fossa-output

  artifacts:
    paths:
      - ./**/maven-*-output.txt
      - fossa-output
    when: always
    expire_in: 2 days

  script:
    # fossa-with-cache needs a CI_COMMIT_BRANCH defined to know how to parse the FOSSA API results
    # When building tags, this isn't defined by GitLab. In that case, we use the tag name instead. If that's not defined
    # then things will fail and we'll have to make this smarter
    - test -z "$CI_COMMIT_BRANCH" && export CI_COMMIT_BRANCH="$CI_COMMIT_TAG"

    - $MAVEN_FOREACH maven-fossa-output.txt install --update-snapshots -DskipTests=true
    - cp "$CI_PROJECT_DIR/.mvn/community-maven.settings.xml" ~/.m2/settings.xml
    - rm -rf ~/.m2/repository
    - mv $MAVEN_REPO_PATH ~/.m2/repository

    - fossa-with-cache

fossa-check-notice:
  image: $CI_REGISTRY/divido/fossa-with-cache/incremental:latest
  stage: attribution
  needs: ['fossa-analyze']
  tags: ['osdu-small']
  rules:
    - if: $FOSSA_API_KEY

  artifacts:
    when: on_failure
    paths:
      - fossa-output/cached-NOTICE
      - fossa-output/generated-clean-NOTICE
    expire_in: 2 days

  script:
    # Check to see if a newer commit exists for the pipeline's branch, and if it does, use that NOTICE instead of this one's
    - |
      if [ "$CI_COMMIT_BRANCH" != "" ]; then
        colorCmd="\e[32;1m"
        colorReset="\e[0m"
        function echoCmd() {
          echo -e "${colorCmd}>" "$@" "${colorReset}"
        }

        echoCmd git fetch
        git fetch

        echoCmd git diff --name-only HEAD origin/$CI_COMMIT_BRANCH
        branchDiffs="$(git diff --name-only HEAD origin/$CI_COMMIT_BRANCH)"
        echo $branchDiffs
        echo "--------------------"

        if [ "$branchDiffs" == "NOTICE" ]; then
          echo "The branch associated with this pipeline ($CI_COMMIT_BRANCH) has been changed, but the only changes are the NOTICE file"
          echo "I will use the NOTICE file from origin/$CI_COMMIT_BRANCH ($(git rev-parse --short origin/$CI_COMMIT_BRANCH)) as the basis for comparison"
          echoCmd git checkout origin/$CI_COMMIT_BRANCH -- NOTICE
          git checkout origin/$CI_COMMIT_BRANCH -- NOTICE

        elif [ "$branchDiffs" == "" ]; then
          echo "The branch associated with this pipeline ($CI_COMMIT_BRANCH) has not been changed since the commit that spawned this pipeline"
          echo "I will use the NOTICE file from the pipeline's commit ($CI_COMMIT_SHORT_SHA) as the basis for comparison"

        else
          echo "The branch associated with this pipeline ($CI_COMMIT_BRANCH) has been changed, but the changes include more than just the NOTICE file"
          echo "I will use the NOTICE file from the pipeline's commit ($CI_COMMIT_SHORT_SHA) as the basis for comparison"
        fi
      fi

    # Use a cached NOTICE if available, otherwise use a generated one
    - |
      if [ -e fossa-output/cached-NOTICE ]; then
        fossaGeneratedNotice=fossa-output/cached-NOTICE;

      elif [ -e fossa-output/generated-clean-NOTICE ]; then
        fossaGeneratedNotice=fossa-output/generated-clean-NOTICE

      else
        echo "Couldn't find either a cached-NOTICE or generated-clean-NOTICE in the fossa-output/ directory"
        echo
        echo "At least one of these should have been generated by a previous job stage (fossa-analyze) and stored"
        echo "as an artifact. Something must be wrong in the CI setup"
        exit 1
      fi

      echo "Comparing with $fossaGeneratedNotice"

    # If the comparison finds differences, let the user know what to do next
    - |
      if ! fossa-compare-notices NOTICE $fossaGeneratedNotice; then
        echo --------------------------------------------------------------------------------
        echo "There are differences in the NOTICE file"
        echo "Please review these differences, and if they look appropriate based on your"
        echo "changes, update the committed NOTICE file"
        echo "--------------------"
        echo "If you make changes to the NOTICE file (and only the NOTICE file), you can"
        echo "re-run this single stage of the pipeline alone rather than the whole pipeline"
        echo "One way to achieve this:"
        echo "$ wget -O NOTICE '${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/raw/${fossaGeneratedNotice}?inline=false'"
        echo "$ git add NOTICE"
        echo "$ git commit -m 'Updating NOTICE'"
        echo "$ git push -o ci.skip"
        echo "Then retry this job"
        exit 1
      fi
